<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>fileTypes</key>
  <array>
    <string>fy</string>
    <string>fancypack</string>
    <string>Fakefile</string>
  </array>
  <key>firstLineMatch</key>
  <string>^#!/.*\bfancy\b</string>
  <key>foldingStartMarker</key>
  <string>/\*\*|\{\s*$</string>
  <key>foldingStopMarker</key>
  <string>\*\*/|^\s*\}</string>
  <key>keyEquivalent</key>
  <string>^~F</string>
  <key>name</key>
  <string>Fancy</string>
  <key>patterns</key>
  <array>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.class.fancy</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>variable.other.constant.fancy</string>
        </dict>
        <key>4</key>
        <dict>
          <key>name</key>
          <string>entity.other.inherited-class.fancy</string>
        </dict>
        <key>5</key>
        <dict>
          <key>name</key>
          <string>punctuation.separator.inheritance.fancy</string>
        </dict>
        <key>6</key>
        <dict>
          <key>name</key>
          <string>variable.other.object.fancy</string>
        </dict>
      </dict>
      <key>match</key>
      <string>^\s*(class)\s+(([.a-zA-Z0-9_:]+(\s*(:)\s*[.a-zA-Z0-9_:\s]+)?))</string>
      <key>name</key>
      <string>meta.class.fancy</string>
    </dict>
    <dict>
      <key>begin</key>
      <string>(?x)
              (?=def\b)                                                     # an optimization to help Oniguruma fail fast
            (?&lt;=^|\s)(def)\s+                                            # the def keyword
            (self)\s+                                                       # a method definition prefix in this case self
            (([a-z]?\w+[?!]?:?)
            |===|&gt;[&gt;=]?|&lt;=&gt;|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]|=\?)\s+       # the method name
              </string>
      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.def.fancy</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>variable.language.fancy</string>
        </dict>
        <key>3</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>fancy method definition, with self as prefix, this rule must be here</string>
      <key>end</key>
      <string>$</string>
      <key>name</key>
      <string>meta.function.method.fancy.self</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#arg_name</string>
        </dict>
      </array>
    </dict>
    <dict>
      <key>begin</key>
      <string>(?x)
              (?=def\b)                                     # an optimization to help Oniguruma fail fast
              (?&lt;=^|\s)(def)\s+                          # the def keyword
              (((?&gt;[A-Z_-]\w*(?&gt;\s+))?)+)              # a method definition prefix
              (([a-z]?\w+[?!]?:?)
              |===|&gt;[&gt;=]?|&lt;=&gt;|&lt;[&lt;=]?|[%&amp;`/\|]|\*\*?|=?~|[-+]@?|\[\]|=\?)\s+   # the method name
              </string>
      <key>beginCaptures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.control.def.fancy</string>
        </dict>
        <key>2</key>
        <dict>
          <key>name</key>
          <string>variable.other.constant.fancy</string>
        </dict>
        <key>4</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>same as the previous, but with other prefixes class and variable names</string>
      <key>end</key>
      <string>$</string>
      <key>name</key>
      <string>meta.function.method.fancy</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#arg_name</string>
        </dict>
      </array>
    </dict>
    <dict>
      <key>begin</key>
      <string>\b(require:)</string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.other.special-method.fancy</string>
        </dict>
      </dict>
      <key>end</key>
      <string>$|(?=#)</string>
      <key>name</key>
      <string>meta.require.fancy</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
      </array>
    </dict>
    <dict>
      <key>begin</key>
      <string>\b(include:)</string>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>keyword.other.special-method.fancy</string>
        </dict>
      </dict>
      <key>end</key>
      <string>$|(?=#)</string>
      <key>name</key>
      <string>meta.include.fancy</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>include</key>
          <string>$self</string>
        </dict>
      </array>
    </dict>
    <dict>
      <key>comment</key>
      <string>Control flow keywords that aren't regular messages.</string>
      <key>match</key>
      <string>\b(return|return_local|match|case|try|catch|finally|retry)\b:?</string>
      <key>name</key>
      <string>keyword.control.fancy</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>entity.name.function.fancy</string>
        </dict>
      </dict>
      <key>match</key>
      <string>([a-z_-]\w*[?!]?:)</string>
      <key>name</key>
      <string>meta.message.fancy</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(false|nil|true)\b(?![?!])</string>
      <key>name</key>
      <string>constant.language.fancy</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.constant.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Symbol literals</string>
      <key>match</key>
      <string>'([^'\s\[\]\(\)\{\},]+|\[\])</string>
      <key>name</key>
      <string>constant.other.symbol.fancy</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>0</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.constant.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Dynamic variable literals</string>
      <key>match</key>
      <string>\*[a-zA-Z0-9_-]+\*</string>
      <key>name</key>
      <string>constant.other.dynvar.fancy</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>Pseudo variables</string>
      <key>match</key>
      <string>\b(__(FILE|LINE)__|self|super)\b(?![?!])</string>
      <key>name</key>
      <string>constant.language.fancy</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>Constant names like class names, constants</string>
      <key>match</key>
      <string>\b[A-Z]\w*\b</string>
      <key>name</key>
      <string>variable.other.constant.fancy</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.variable.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Instance variables</string>
      <key>match</key>
      <string>(@)[a-zA-Z_]\w*</string>
      <key>name</key>
      <string>variable.other.readwrite.instance.fancy</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>punctuation.definition.variable.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Class variables</string>
      <key>match</key>
      <string>(@@)[a-zA-Z_]\w*</string>
      <key>name</key>
      <string>variable.other.readwrite.class.fancy</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>punctuation.section.array.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Hash literals, this should be here to take precedence over &lt;&gt; operators</string>
      <key>match</key>
      <string>(&lt;\[|\]&gt;)</string>
      <key>name</key>
      <string>punctuation.section.hash.fancy</string>
    </dict>
    <dict>
      <key>captures</key>
      <dict>
        <key>1</key>
        <dict>
          <key>name</key>
          <string>string.regexp.classic.fancy</string>
        </dict>
      </dict>
      <key>comment</key>
      <string>Regexp literals</string>
      <key>match</key>
      <string>(/[^/]*/)</string>
      <key>name</key>
      <string>string.regexp.classic.fancy</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>Assingnment operators</string>
      <key>match</key>
      <string>&lt;&lt;=|%=|&amp;=|\*=|\*\*=|\+=|\-=|\^=|\|{1,2}=|&lt;&lt;</string>
      <key>name</key>
      <string>keyword.operator.assignment.augmented.fancy</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>Comparison operators</string>
      <key>match</key>
      <string>&lt;=&gt;|&lt;(?!&lt;|=)|&gt;(?!&lt;|=|&gt;)|&lt;=|&gt;=|===|==|=~|!=|!~|(?&lt;=[ \t])\?</string>
      <key>name</key>
      <string>keyword.operator.comparison.fancy</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>Logical operators</string>
      <key>match</key>
      <string>\b(not|and|or)\b:|(?&lt;=[ \t])!+|&amp;&amp;|\|\||\^</string>
      <key>name</key>
      <string>keyword.operator.logical.fancy</string>
    </dict>
    <dict>
      <key>comment</key>
      <string>Arithmetic operators</string>
      <key>match</key>
      <string>(%|&amp;|\*\*|\*|\+|\-|/)</string>
      <key>name</key>
      <string>keyword.operator.arithmetic.fancy</string>
    </dict>
    <dict>
      <key>match</key>
      <string>=</string>
      <key>name</key>
      <string>keyword.operator.assignment.fancy</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\;</string>
      <key>name</key>
      <string>punctuation.separator.statement.fancy</string>
    </dict>
    <dict>
      <key>match</key>
      <string>,</string>
      <key>name</key>
      <string>punctuation.separator.object.fancy</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\s</string>
      <key>name</key>
      <string>punctuation.separator.method.ruby</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\[|\]</string>
      <key>name</key>
      <string>punctuation.section.array.fancy</string>
    </dict>
    <dict>
      <key>begin</key>
      <string>"</string>
      <key>end</key>
      <string>"</string>
      <key>name</key>
      <string>string.quoted.double.fancy</string>
      <key>patterns</key>
      <array>
        <dict>
          <key>match</key>
          <string>\\.</string>
          <key>name</key>
          <string>constant.character.escape.fancy</string>
        </dict>
      </array>
    </dict>
    <dict>
      <key>match</key>
      <string>(?:^[ \t]+)?(#).*$\n?</string>
      <key>name</key>
      <string>comment.line.number-sign.fancy</string>
    </dict>
    <dict>
      <key>match</key>
      <string>\b(0[xX][0-9A-Fa-f](?&gt;_?[0-9A-Fa-f])*|\d(?&gt;_?\d)*(\.(?![^[:space:][:digit:]])(?&gt;_?\d)*)?([eE][-+]?\d(?&gt;_?\d)*)?|0[bB][01]+)\b</string>
      <key>name</key>
      <string>constant.numeric.fancy</string>
    </dict>
  </array>
  <key>repository</key>
  <dict>
    <key>arg_name</key>
    <dict>
      <key>match</key>
      <string>([a-z_-]\w*:)</string>
      <key>name</key>
      <string>entity.name.function.fancy</string>
    </dict>
  </dict>
  <key>scopeName</key>
  <string>source.fancy</string>
  <key>uuid</key>
  <string>866B0ECA-ACF9-480B-A724-F20E966AA3BF</string>
</dict>
</plist>
